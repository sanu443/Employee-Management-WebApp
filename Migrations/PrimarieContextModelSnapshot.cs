// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PrimarieApp.Data;

#nullable disable

namespace ProiectNou1.Migrations
{
    [DbContext(typeof(PrimarieContext))]
    partial class PrimarieContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Angajat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdresaDomiciliu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("AngajatCurent")
                        .HasColumnType("boolean");

                    b.Property<string>("CNP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataAngajare")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DepartamentId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<char>("InitialaTata")
                        .HasColumnType("character(1)");

                    b.Property<float>("MediaConcurs")
                        .HasColumnType("real");

                    b.Property<float>("MediaSalarii2Ani")
                        .HasColumnType("real");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PostId")
                        .HasColumnType("integer");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("SalariuCurent")
                        .HasColumnType("real");

                    b.Property<string>("ScoalaAbsolvita")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentId");

                    b.HasIndex("PostId");

                    b.ToTable("Angajati");
                });

            modelBuilder.Entity("Departament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("OrganigramaInternaId")
                        .HasColumnType("integer");

                    b.Property<int?>("SefId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrganigramaInternaId");

                    b.HasIndex("SefId");

                    b.ToTable("Departamente");
                });

            modelBuilder.Entity("NodOrganigrama", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Noduri");
                });

            modelBuilder.Entity("OrganigramaInterna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("MermaidCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("NodRootId")
                        .HasColumnType("integer");

                    b.Property<string>("NumeOrganigrama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NodRootId");

                    b.ToTable("Organigrame");
                });

            modelBuilder.Entity("Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DescrierePost")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FisaPostului")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NrAngajatiNecesari")
                        .HasColumnType("integer");

                    b.Property<int>("NrPosturiOcupate")
                        .HasColumnType("integer");

                    b.Property<string>("NumePost")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Posturi");
                });

            modelBuilder.Entity("RelatieOrganigrama", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Nod1Id")
                        .HasColumnType("integer");

                    b.Property<int>("Nod2Id")
                        .HasColumnType("integer");

                    b.Property<string>("NumeRelatie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Nod1Id");

                    b.HasIndex("Nod2Id");

                    b.ToTable("Relatii");
                });

            modelBuilder.Entity("Angajat", b =>
                {
                    b.HasOne("Departament", "Departament")
                        .WithMany("Angajati")
                        .HasForeignKey("DepartamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Post", "Post")
                        .WithMany("Angajati")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departament");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Departament", b =>
                {
                    b.HasOne("OrganigramaInterna", "OrganigramaInterna")
                        .WithMany("Departamente")
                        .HasForeignKey("OrganigramaInternaId");

                    b.HasOne("Angajat", "Sef")
                        .WithMany()
                        .HasForeignKey("SefId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("OrganigramaInterna");

                    b.Navigation("Sef");
                });

            modelBuilder.Entity("OrganigramaInterna", b =>
                {
                    b.HasOne("NodOrganigrama", "NodRoot")
                        .WithMany()
                        .HasForeignKey("NodRootId");

                    b.Navigation("NodRoot");
                });

            modelBuilder.Entity("RelatieOrganigrama", b =>
                {
                    b.HasOne("NodOrganigrama", "Nod1")
                        .WithMany()
                        .HasForeignKey("Nod1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NodOrganigrama", "Nod2")
                        .WithMany()
                        .HasForeignKey("Nod2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nod1");

                    b.Navigation("Nod2");
                });

            modelBuilder.Entity("Departament", b =>
                {
                    b.Navigation("Angajati");
                });

            modelBuilder.Entity("OrganigramaInterna", b =>
                {
                    b.Navigation("Departamente");
                });

            modelBuilder.Entity("Post", b =>
                {
                    b.Navigation("Angajati");
                });
#pragma warning restore 612, 618
        }
    }
}
